{"version":3,"sources":["theme.js","components/BarChart/BarChart.js","components/Board/Board.js","components/Game/Game.js","components/App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","textAlign","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","margin","overflow","footer","BarChart","data","title","x","y","d3svg","useRef","width","color","useEffect","current","svg","select","xMax","max","d","xScale","scaleLinear","domain","range","yScale","scaleBand","map","paddingInner","append","attr","text","selectAll","enter","bandwidth","style","i","xAxis","axisBottom","call","yAxis","axisLeft","tickSize","className","role","ref","Square","this","props","winning","player","classes","join","onClick","React","Component","Board","squares","e","target","innerText","trim","length","classList","remove","setTimeout","add","renderSquare","LINES","Game","goToMove","bind","state","newGame","a","b","c","currentStep","wins","o","scratch","history","winner","calculateWinner","newSquares","Array","fill","forEach","square","index","currentPlayer","Audio","play","setState","concat","boardState","step","slice","records","whoseTurnIsIt","Container","maxWidth","Button","variant","Grid","container","alignItems","item","xs","Paper","Typography","align","handleClick","GameScoreCards","games","Fragment","direction","justify","gutterBottom","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","key","component","scope","GameMoves","moves","move","isLastMove","Icon","Copyright","Link","href","Date","getFullYear","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0cc2bad6.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n        textAlign: 'center'\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'left'\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(4),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));","import React, {useEffect, useRef} from 'react'\nimport {select} from 'd3-selection'\nimport {max} from 'd3-array'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {axisLeft, axisBottom} from 'd3-axis'\nimport './BarChart.css';\n\nconst BarChart = ({data, title, x, y}) => {\n    const d3svg = useRef(null);\n    // margin convention often used with D3\n    const margin = {top: 80, right: 60, bottom: 80, left: 60};\n    const width = 500 - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n    const color = ['#3f51b5', '#61dafb', '#b33535', '#283250'];\n\n\n    useEffect(() => {\n        if (data && d3svg.current) {\n            let svg = select(d3svg.current);\n\n            // scales\n            const xMax = max(data, d => d[x]);\n\n            const xScale = scaleLinear()\n                .domain([0, xMax])\n                .range([0, width]);\n\n            const yScale = scaleBand()\n                .domain(data.map(d => d[y]))\n                .range([0, height])\n                .paddingInner(0.25);\n\n            // append group translated to chart area\n            svg = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n            // draw header\n            title &&\n            svg\n                .append('g')\n                .attr('class', 'bar-header')\n                .attr('transform', `translate(0, ${-margin.top / 2})`)\n                .append('text')\n                .append('tspan')\n                .text(title)\n\n            // draw bars\n            svg\n                .selectAll('.bar')\n                .data(data)\n                .enter()\n                .append('rect')\n                .attr('class', 'bar')\n                .attr('y', d => yScale(d[y]))\n                .attr('width', d => xScale(d[x]))\n                .attr('height', yScale.bandwidth())\n                .style('fill', function (d, i) {\n                    return color[i % 4]; // use colors in sequence\n                });\n\n            // draw axes\n            const xAxis = axisBottom(xScale);\n            svg\n                .append('g')\n                .attr('class', 'x axis')\n                .attr('transform', `translate(0,${height + margin.bottom / 3})`)\n                .call(xAxis);\n\n            const yAxis = axisLeft(yScale).tickSize(0);\n            svg\n                .append('g')\n                .attr('class', 'y axis')\n                .attr('transform', `translate(${-margin.left / 3},0)`)\n                .call(yAxis)\n        }\n    }, [data, color, height, margin.bottom, margin.left, margin.top, title, width, x, y]);\n\n    return (\n        <svg\n            className=\"bar-chart-container\"\n            width={width + margin.left + margin.right}\n            height={height + margin.top + margin.bottom}\n            role=\"img\"\n            ref={d3svg}\n        ></svg>\n    );\n}\n\nexport default BarChart","import React from 'react';\nimport './Board.css';\n\nclass Square extends React.Component {\n    render() {\n        const {winning, player} = this.props;\n\n        const classes = [\n            'square',\n            winning ? 'square--winner' : ''\n        ].join(' ');\n\n        return (\n            <button className={classes} onClick={this.props.onClick}>\n                {player}\n            </button>\n        )\n    }\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        const {player, winning} = this.props.squares[i];\n\n        return (\n            <Square\n                player={player}\n                winning={winning}\n                onClick={(e) => {\n                    this.props.onClick(i);\n\n                    e.target.innerText.trim().length === 0 && function () {\n                        let classes = e.target.classList;\n                        classes.remove('flipInY');\n\n                        setTimeout(function () {\n                            classes.add('flipInY');\n                        }, 0);\n                    }();\n                }}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"tic-tac-board\">\n                <div className=\"tic-tac-board__row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"tic-tac-board__row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"tic-tac-board__row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport BarChart from '../BarChart/BarChart'\nimport Board from '../Board/Board'\n\nimport './Game.css';\n\nconst LINES = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n];\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.goToMove = this.goToMove.bind(this);\n\n        this.state = this.newGame();\n    }\n\n    calculateWinner(squares) {\n        for (let i = 0; i < LINES.length; i++) {\n            const [a, b, c] = LINES[i];\n\n            if (squares[a].player && squares[a].player === squares[b].player && squares[a].player === squares[c].player) {\n                squares[a].winning = squares[b].winning = squares[c].winning = true;\n                return squares[a].player;\n            }\n        }\n\n        //did we scratch\n        if (this.currentStep() === 9) {\n            return '-';\n        }\n\n        return null;\n    }\n\n    currentGame() {\n        const {wins} = this.state;\n        return wins.x + wins.o + wins.scratch + 1; //+1 for the current game\n    }\n\n    currentPlayer() {\n        return this.currentStep() % 2 === 0 ? 'X' : 'O';\n    }\n\n    currentStep() {\n        return this.state.history.length - 1;\n    }\n\n    handleClick(i) {\n        const {history, wins} = this.state;\n        const {squares} = history[this.currentStep()];\n        let winner = this.calculateWinner(squares);\n\n        if (winner || squares[i].player) {\n            //if someone already won, or the square is taken, then no-op\n            return;\n        }\n\n        const newSquares = new Array(9).fill('');\n        newSquares.forEach((square, index) => {\n            const {player, winning} = squares[index];\n            newSquares[index] = {\n                player: player,\n                winning: winning\n            };\n        });\n\n        newSquares[i].player = this.currentPlayer();\n\n        winner = this.calculateWinner(newSquares);\n\n        //did we scratch?\n        !winner && this.currentStep() === 8 && (winner = '-');\n\n        //play a sound...\n        Audio.play && function() {\n            if (!winner) {\n                Audio.play('/tic-tac-react/sounds/NFF-ping.wav');\n            } else if (winner !== '-') {\n                Audio.play('/tic-tac-react/sounds/NFF-level-up.wav');\n            } else {\n                Audio.play('/tic-tac-react/sounds/NFF-gameover.wav');\n            }\n        }();\n\n        this.setState({\n            history: history.concat([\n                {\n                    squares: newSquares\n                }\n            ]),\n            wins: {\n                x: winner === 'X' ? wins.x + 1 : wins.x,\n                o: winner === 'O' ? wins.o + 1 : wins.o,\n                scratch: winner === '-' ? wins.scratch + 1 : wins.scratch\n            }\n        });\n    }\n\n    newGame() {\n        const state = {\n            history: [\n                {\n                    squares: new Array(9).fill('')\n                }\n            ],\n            wins: {\n                x: this.state ? this.state.wins.x : 0,\n                o: this.state ? this.state.wins.o : 0,\n                scratch: this.state ? this.state.wins.scratch : 0\n            }\n        };\n\n        //each square needs to be its own play\n        state.history.forEach((boardState) => {\n            for (let i = 0; i < 9; i++) {\n                boardState.squares[i] = {\n                    player: null,\n                    winning: false\n                };\n            }\n        });\n\n        Audio.play && Audio.play('/tic-tac-react/sounds/NFF-new-game.wav');\n\n        return state;\n    }\n\n    goToMove(step) {\n        this.setState({\n            history: this.state.history.slice(0, step + 1),\n            wins: this.state.wins\n        });\n    }\n\n    render() {\n        if (!this.state) {\n            return null;\n        }\n\n        const history = this.state.history;\n        const current = history[this.currentStep()];\n        const wins = [\n            {\n                player: 'X',\n                wins: this.state.wins.x\n            },\n            {\n                player: 'O',\n                wins: this.state.wins.o\n            },\n            {\n                player: '-',\n                wins: this.state.wins.scratch\n            }\n        ];\n        const records = this.state.wins;\n\n        const winner = this.calculateWinner(current.squares);\n        const classes = this.props.classes;\n        const whoseTurnIsIt = winner ?\n            winner === '-' ? \"It's a scratch!\" : \"Winner: \" + winner\n            : \"It's \" + this.currentPlayer() + \"'s turn\"\n\n        return (\n            <div className={classes.heroButtons}>\n                <Container maxWidth=\"sm\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        this.setState(this.newGame());\n                    }}>\n                        New game\n                    </Button>\n                </Container>\n                <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={6}>\n                        <Paper>\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n                                {whoseTurnIsIt}\n                            </Typography>\n                            <Board className=\"tic-tac-game\"\n                                   squares={current.squares}\n                                   onClick={i => this.handleClick(i)}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper>\n                            <GameMoves history={history} goToMove={this.goToMove} winner={winner}/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <GameScoreCards wins={wins} records={records}/>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass GameScoreCards extends React.Component {\n    render() {\n        const {wins, records} = this.props;\n        const games = records.o + records.x + records.scratch;\n\n        return (\n            <React.Fragment>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                >\n                    <Grid item xs={12}>\n                        <Paper>\n                            <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n                                Stats\n                            </Typography>\n                            <TableContainer>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Player</TableCell>\n                                            <TableCell align=\"right\">Wins</TableCell>\n                                            <TableCell align=\"right\">Losses</TableCell>\n                                            <TableCell align=\"right\">Scratch</TableCell>\n                                            <TableCell align=\"right\">%</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow key=\"x\">\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                X\n                                            </TableCell>\n                                            <TableCell align=\"right\">{records.x}</TableCell>\n                                            <TableCell align=\"right\">{records.o}</TableCell>\n                                            <TableCell align=\"right\">{records.scratch}</TableCell>\n                                            <TableCell align=\"right\">{games ? records.x / games : 0}</TableCell>\n                                        </TableRow>\n                                        <TableRow key=\"o\">\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                O\n                                            </TableCell>\n                                            <TableCell align=\"right\">{records.o}</TableCell>\n                                            <TableCell align=\"right\">{records.x}</TableCell>\n                                            <TableCell align=\"right\">{records.scratch}</TableCell>\n                                            <TableCell align=\"right\">{games ? records.o / games : 0}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper>\n                            <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n                                Games played\n                            </Typography>\n                            <Typography variant=\"h1\" color=\"textSecondary\">\n                                {games}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Paper>\n                            <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n                                Scratches\n                            </Typography>\n                            <Typography variant=\"h1\" color=\"textSecondary\">\n                                {records.scratch}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper>\n                            <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n                                Wins by player\n                            </Typography>\n                            <BarChart data={wins} title=\"\" x=\"wins\" y=\"player\"/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nclass GameMoves extends React.Component {\n    render() {\n        const {goToMove, history, winner} = this.props;\n\n        const moves = history.map((move, index) => {\n            const isLastMove = (index === history.length - 1);\n            const player = (isLastMove && winner) ?\n                winner === '-' ? \"It's a scratch!\" : (winner + ' wins!') :\n                index ? index % 2 === 0 ? 'O' : 'X' : '';\n\n            return (\n                <React.Fragment key={'tic-tac-game__move' + index}>\n                    {index ? (\n                            <React.Fragment>\n                                {!isLastMove ? (\n                                        <Icon color=\"primary\">redo</Icon>\n                                    ) : winner ? '' : (<Icon color=\"primary\">redo</Icon>)\n                                }\n                                <span>{player}</span>\n                            </React.Fragment>\n                        ) : ''}\n                    {(isLastMove && winner) ?\n                        '' : (\n                            <Button variant={index ? 'outlined' : 'contained'}\n                                    className=\"tic-tac-game__move fadeIn\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={() => goToMove(index)}>\n                                {index ? index : (<Icon>home</Icon>)}\n                            </Button>\n                        )}\n                </React.Fragment>\n            );\n        });\n\n        return (\n            <div className=\"tic-tac-game__moves\">\n                <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n                    History\n                </Typography>\n                {moves}\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport {useStyles} from '../../theme'\nimport Game from '../Game/Game'\n\nimport './App.css';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default function App() {\n    const classes = useStyles() || {};\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            <main>\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            <div className=\"fadeInDown\">Welcome to</div>\n                            <span className=\"fadeInDown delay--short\">Tic</span><span\n                            className=\"fadeInDown delay\">-Tac-</span><Link href=\"https://reactjs.org/\"><span\n                            className=\"fadeInDown delay--long react-logo--large flipInY\"></span></Link>\n                        </Typography>\n                        <Game classes=\"{classes}\"/>\n                    </Container>\n                </div>\n            </main>\n\n            <footer className={classes.footer}>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\">\n                    Powered by <Link href=\"https://reactjs.org/\">\n                    <div className=\"react-logo--small\"></div>\n                </Link>\n                </Typography>\n                <Copyright />\n            </footer>\n        </React.Fragment>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}