{"version":3,"sources":["theme.js","components/BarChart/BarChart.js","components/Board/Board.js","components/Game/Game.js","components/App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","textAlign","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","margin","overflow","footer","BarChart","data","title","xLabel","yLabel","d3svg","useRef","width","color","useEffect","current","svg","select","xMax","max","d","xScale","scaleLinear","domain","range","yScale","scaleBand","map","paddingInner","append","attr","text","selectAll","enter","bandwidth","style","i","xAxis","axisBottom","call","yAxis","axisLeft","tickSize","className","role","ref","defaultProps","Square","onSquareClick","player","position","winning","classes","join","type","onClick","evt","undefined","preventDefault","classList","target","remove","setTimeout","add","Board","squares","winner","handleSquareClick","row","index","rowNumber","key","calculateWinner","forEach","line","x","y","z","GameScoreCards","wins","records","o","scratch","games","Grid","container","direction","justify","alignItems","item","xs","Paper","Typography","variant","gutterBottom","TableContainer","Table","size","TableHead","TableRow","TableCell","align","TableBody","component","scope","GameMoves","props","onGoToMove","moves","winnerMsg","history","move","moveNumber","isLastMove","length","button","Button","Icon","Fragment","TicTacToeGame","useState","setMoves","newGame","emptyMove","push","Audio","play","currentMove","currentPlayer","currentSquares","isScratch","scratchOrPlayerTurnMsg","whoseTurnIsIt","Container","maxWidth","newSquares","Array","fill","square","toLowerCase","concat","slice","Copyright","Link","href","Date","getFullYear","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa7287c7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n    textAlign: 'center',\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(4),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { select } from 'd3-selection';\nimport { max } from 'd3-array';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { axisLeft, axisBottom } from 'd3-axis';\n\nimport './BarChart.css';\n\nconst BarChart = ({ data, title, xLabel, yLabel }) => {\n  const d3svg = useRef(null);\n  // margin convention often used with D3\n  const margin = { top: 80, right: 60, bottom: 80, left: 60 };\n  const width = 500 - margin.left - margin.right;\n  const height = 300 - margin.top - margin.bottom;\n  const color = ['#3f51b5', '#61dafb', '#b33535', '#283250'];\n\n  useEffect(() => {\n    if (data && d3svg.current) {\n      let svg = select(d3svg.current);\n\n      // scales\n      const xMax = max(data, (d) => d[xLabel]);\n\n      const xScale = scaleLinear().domain([0, xMax]).range([0, width]);\n\n      const yScale = scaleBand()\n        .domain(data.map((d) => d[yLabel]))\n        .range([0, height])\n        .paddingInner(0.25);\n\n      // append group translated to chart area\n      svg = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n      // draw header\n      if (title) {\n        svg\n          .append('g')\n          .attr('class', 'bar-header')\n          .attr('transform', `translate(0, ${-margin.top / 2})`)\n          .append('text')\n          .append('tspan')\n          .text(title);\n      }\n\n      // draw bars\n      svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('y', (d) => yScale(d[yLabel]))\n        .attr('width', (d) => xScale(d[xLabel]))\n        .attr('height', yScale.bandwidth())\n        .style('fill', function callback(d, i) {\n          return color[i % 4]; // use colors in sequence\n        });\n\n      // draw axes\n      const xAxis = axisBottom(xScale);\n      svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0,${height + margin.bottom / 3})`)\n        .call(xAxis);\n\n      const yAxis = axisLeft(yScale).tickSize(0);\n      svg\n        .append('g')\n        .attr('class', 'y axis')\n        .attr('transform', `translate(${-margin.left / 3},0)`)\n        .call(yAxis);\n    }\n  }, [\n    data,\n    color,\n    height,\n    margin.bottom,\n    margin.left,\n    margin.top,\n    title,\n    width,\n    xLabel,\n    yLabel,\n  ]);\n\n  return (\n    <svg\n      className=\"bar-chart-container\"\n      width={width + margin.left + margin.right}\n      height={height + margin.top + margin.bottom}\n      role=\"img\"\n      ref={d3svg}\n    />\n  );\n};\n\nBarChart.defaultProps = {\n  title: '',\n  xLabel: '',\n  yLabel: '',\n};\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      player: PropTypes.string.isRequired,\n      wins: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  title: PropTypes.string,\n  xLabel: PropTypes.string,\n  yLabel: PropTypes.string,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Board.css';\n\nexport function Square({ onSquareClick, player, position, winning = false }) {\n  const classes = ['square', winning ? 'square--winner' : ''].join(' ');\n\n  const handleSquareClick = (evt) => {\n    if (player !== undefined && player !== null) {\n      // if the square is already taken, then do nothing\n\n      if (evt) {\n        evt.preventDefault();\n      }\n    } else {\n      onSquareClick(position);\n\n      if (evt) {\n        const { classList } = evt.target;\n        classList.remove('flipInY');\n\n        setTimeout(function updateClasses() {\n          classList.add('flipInY');\n        }, 0);\n      }\n    }\n  };\n\n  return (\n    <button type=\"button\" className={classes} onClick={handleSquareClick}>\n      {player}\n    </button>\n  );\n}\n\nSquare.defaultProps = {\n  player: null,\n};\n\nSquare.propTypes = {\n  onSquareClick: PropTypes.func.isRequired,\n  player: PropTypes.string,\n  position: PropTypes.number.isRequired,\n  winning: PropTypes.bool.isRequired,\n};\n\nexport default function Board({ squares, onSquareClick }) {\n  let winner = false;\n\n  const rows = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n  ];\n\n  const handleSquareClick = (position) => {\n    // if we don't have a winner yet, allow the click\n    if (!winner) {\n      onSquareClick(position);\n    }\n  };\n\n  return (\n    <div className=\"tic-tac-board\">\n      {rows.map((row, index) => {\n        const rowNumber = index;\n\n        return (\n          <div key={rowNumber} className=\"tic-tac-board__row\">\n            {row.map((position) => {\n              const { player, winning } = squares[position];\n\n              winner = winner || winning;\n\n              return (\n                <Square\n                  key={position}\n                  position={position}\n                  player={player}\n                  winning={winning}\n                  onSquareClick={handleSquareClick}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  onSquareClick: PropTypes.func.isRequired,\n  squares: PropTypes.arrayOf(\n    PropTypes.shape({\n      player: PropTypes.string,\n      winning: PropTypes.bool.isRequired,\n    })\n  ).isRequired,\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport BarChart from '../BarChart/BarChart';\nimport Board from '../Board/Board';\n\nimport './Game.css';\n\n// figure out if we have a winner\nexport const calculateWinner = (squares) => {\n  let winner = null;\n\n  const winningLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  winningLines.forEach((line) => {\n    const [x, y, z] = line;\n\n    if (\n      squares[x].player &&\n      squares[x].player === squares[y].player &&\n      squares[x].player === squares[z].player\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      squares[x].winning = true;\n      // eslint-disable-next-line no-param-reassign\n      squares[y].winning = true;\n      // eslint-disable-next-line no-param-reassign\n      squares[z].winning = true;\n\n      winner = squares[x].player;\n    }\n  });\n\n  return winner;\n};\n\nfunction TicTacToeGame({ classes }) {\n  const [moves, setMoves] = useState([]);\n\n  const wins = useRef({\n    x: 0,\n    o: 0,\n    scratch: 0,\n  });\n\n  const newGame = () => {\n    const emptyMove = {\n      squares: [],\n    };\n\n    for (let i = 0; i < 9; i += 1) {\n      emptyMove.squares.push({\n        player: null,\n        winning: false,\n      });\n    }\n\n    if (moves.length > 0 && Audio.play) {\n      Audio.play('/tic-tac-react/sounds/NFF-new-game.wav');\n    }\n\n    setMoves([emptyMove]);\n  };\n\n  if (moves.length === 0) {\n    newGame();\n    return null;\n  }\n\n  const currentMove = () => {\n    return moves.length === 0 ? 0 : moves.length - 1;\n  };\n\n  const currentPlayer = () => {\n    return currentMove() % 2 === 0 ? 'X' : 'O';\n  };\n\n  const currentSquares = () => {\n    return moves[currentMove()].squares;\n  };\n\n  const goToMove = (move) => {\n    setMoves(moves.slice(0, move + 1));\n  };\n\n  const isScratch = (squares) => {\n    return (\n      currentMove() === (squares ? 8 : 9) &&\n      calculateWinner(squares || currentSquares()) === null\n    );\n  };\n\n  const onSquareClick = (position) => {\n    const squares = currentSquares();\n    const newSquares = new Array(9).fill('');\n\n    newSquares.forEach((square, index) => {\n      const { player, winning } = squares[index];\n      newSquares[index] = {\n        player,\n        winning,\n      };\n    });\n\n    newSquares[position].player = currentPlayer();\n\n    const winner = calculateWinner(newSquares);\n\n    if (isScratch(newSquares)) {\n      wins.current.scratch += 1;\n      wins.current = { ...wins.current };\n    } else if (winner !== null) {\n      wins.current[winner.toLowerCase()] += 1;\n      wins.current = { ...wins.current };\n    }\n\n    setMoves(\n      moves.concat([\n        {\n          squares: newSquares,\n        },\n      ])\n    );\n\n    // play a sound...\n    if (Audio.play) {\n      if (winner) {\n        Audio.play('/tic-tac-react/sounds/NFF-level-up.wav');\n      } else {\n        Audio.play(\n          isScratch()\n            ? '/tic-tac-react/sounds/NFF-gameover.wav'\n            : '/tic-tac-react/sounds/NFF-ping.wav'\n        );\n      }\n    }\n  };\n\n  const winner = calculateWinner(currentSquares());\n  const scratchOrPlayerTurnMsg = isScratch()\n    ? \"It's a scratch!\"\n    : `It's ${currentPlayer()}'s turn`;\n  const whoseTurnIsIt =\n    winner !== null ? `Winner: ${winner}` : scratchOrPlayerTurnMsg;\n\n  return (\n    <div className={classes.heroButtons}>\n      <Container maxWidth=\"sm\">\n        <Button variant=\"contained\" color=\"primary\" onClick={newGame}>\n          New game\n        </Button>\n      </Container>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs={6}>\n          <Paper>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n              {whoseTurnIsIt}\n            </Typography>\n            <Board\n              className=\"tic-tac-game\"\n              squares={currentSquares()}\n              onSquareClick={onSquareClick}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper>\n            <GameMoves moves={moves} onGoToMove={goToMove} winner={winner} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <GameScoreCards wins={wins.current} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nTicTacToeGame.propTypes = {\n  classes: PropTypes.string.isRequired,\n};\n\nfunction GameScoreCards({ wins }) {\n  const records = [\n    {\n      player: 'X',\n      wins: wins.x,\n    },\n    {\n      player: 'O',\n      wins: wins.o,\n    },\n    {\n      player: '-',\n      wins: wins.scratch,\n    },\n  ];\n\n  const games = wins.o + wins.x + wins.scratch;\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n    >\n      <Grid item xs={12}>\n        <Paper>\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n            Stats\n          </Typography>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Player</TableCell>\n                  <TableCell align=\"right\">Wins</TableCell>\n                  <TableCell align=\"right\">Losses</TableCell>\n                  <TableCell align=\"right\">Scratch</TableCell>\n                  <TableCell align=\"right\">%</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow key=\"x\">\n                  <TableCell component=\"th\" scope=\"row\">\n                    X\n                  </TableCell>\n                  <TableCell align=\"right\">{wins.x}</TableCell>\n                  <TableCell align=\"right\">{wins.o}</TableCell>\n                  <TableCell align=\"right\">{wins.scratch}</TableCell>\n                  <TableCell align=\"right\">\n                    {games ? wins.x / games : 0}\n                  </TableCell>\n                </TableRow>\n                <TableRow key=\"o\">\n                  <TableCell component=\"th\" scope=\"row\">\n                    O\n                  </TableCell>\n                  <TableCell align=\"right\">{wins.o}</TableCell>\n                  <TableCell align=\"right\">{wins.x}</TableCell>\n                  <TableCell align=\"right\">{wins.scratch}</TableCell>\n                  <TableCell align=\"right\">\n                    {games ? wins.o / games : 0}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n            Games played\n          </Typography>\n          <Typography variant=\"h1\" color=\"textSecondary\">\n            {games}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Paper>\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n            Scratches\n          </Typography>\n          <Typography variant=\"h1\" color=\"textSecondary\">\n            {wins.scratch}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n            Wins by player\n          </Typography>\n          <BarChart data={records} title=\"\" xLabel=\"wins\" yLabel=\"player\" />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nGameScoreCards.propTypes = {\n  wins: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    o: PropTypes.number.isRequired,\n    scratch: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nfunction GameMoves(props) {\n  const { onGoToMove, moves, winner } = props;\n\n  if (moves === undefined || moves === null) {\n    return null;\n  }\n\n  const winnerMsg = winner === '-' ? \"It's a scratch!\" : `${winner} wins!`;\n\n  const history = moves.map((move, index) => {\n    const moveNumber = index;\n    const isLastMove = index === moves.length - 1;\n    const player = index % 2 === 0 ? 'O' : 'X';\n\n    const button =\n      isLastMove && winner ? (\n        winnerMsg\n      ) : (\n        <Button\n          variant={index ? 'outlined' : 'contained'}\n          className=\"tic-tac-game__move fadeIn\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => onGoToMove(index)}\n        >\n          {index ? player : <Icon>home</Icon>}\n        </Button>\n      );\n\n    const icon = isLastMove ? '' : <Icon color=\"primary\">redo</Icon>;\n\n    return (\n      <React.Fragment key={`tic-tac-game__move${moveNumber}`}>\n        {button}\n        {icon}\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <div className=\"tic-tac-game__moves\">\n      <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n        History\n      </Typography>\n      {history}\n    </div>\n  );\n}\n\nGameMoves.defaultProps = {\n  winner: null,\n};\n\nGameMoves.propTypes = {\n  onGoToMove: PropTypes.func.isRequired,\n  moves: PropTypes.arrayOf(\n    PropTypes.shape({\n      squares: PropTypes.arrayOf(\n        PropTypes.shape({\n          player: PropTypes.string,\n          winning: PropTypes.bool.isRequired,\n        })\n      ).isRequired,\n    })\n  ).isRequired,\n  winner: PropTypes.string,\n};\n\nexport default TicTacToeGame;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport { useStyles } from '../../theme';\nimport Game from '../Game/Game';\n\nimport './App.css';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function App() {\n  const classes = useStyles() || {};\n\n  return (\n    <>\n      <CssBaseline />\n\n      <main>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              <div className=\"fadeInDown\">Welcome to</div>\n              <span className=\"fadeInDown delay--short\">Tic</span>\n              <span className=\"fadeInDown delay\">-Tac-</span>\n              <Link href=\"https://reactjs.org/\">\n                <span className=\"fadeInDown delay--long react-logo--large flipInY\" />\n              </Link>\n            </Typography>\n            <Game classes=\"{classes}\" />\n          </Container>\n        </div>\n      </main>\n\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\">\n          Powered by{' '}\n          <Link href=\"https://reactjs.org/\">\n            <div className=\"react-logo--small\" />\n          </Link>\n        </Typography>\n        <Copyright />\n      </footer>\n    </>\n  );\n}\n","/* eslint no-console: [\"error\", { allow: [\"log\", \"error\"] }] */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}